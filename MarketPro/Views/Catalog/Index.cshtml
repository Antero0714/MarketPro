@model MarketPro.Models.CatalogViewModel

@{
    ViewData["Title"] = "Catalog Page";
}

<!-- ========================= Breadcrumb Start =============================== -->
<div class="breadcrumb mb-0 py-26 bg-main-two-50">
    <div class="container container-lg">
        <div class="breadcrumb-wrapper flex-between flex-wrap gap-16">
            <h6 class="mb-0">Shop</h6>
            <ul class="flex-align gap-8 flex-wrap">
                <li class="text-sm">
                    <a href="@Url.Action("Index", "home")" class="text-gray-900 flex-align gap-8 hover-text-main-600">
                        <i class="ph ph-house"></i>
                        Home
                    </a>
                </li>
                <li class="flex-align">
                    <i class="ph ph-caret-right"></i>
                </li>
                <li class="text-sm text-main-600"> Product Shop </li>
            </ul>
        </div>
    </div>
</div>
<!-- ========================= Breadcrumb End =============================== -->
<!-- =============================== Shop Section Start ======================================== -->
<section class="shop py-80">
    <div class="container container-lg">
        <div class="row">
            <!-- Sidebar Start -->
            <div class="col-lg-3">
                <div class="shop-sidebar">
                    <button type="button" class="shop-sidebar__close d-lg-none d-flex w-32 h-32 flex-center border border-gray-100 rounded-circle hover-bg-main-600 position-absolute inset-inline-end-0 me-10 mt-8 hover-text-white hover-border-main-600">
                        <i class="ph ph-x"></i>
                    </button>
                    <div class="shop-sidebar__box border border-gray-100 rounded-8 p-32 mb-32">
                        <h6 class="text-xl border-bottom border-gray-100 pb-24 mb-24">Categories</h6>
                        <ul class="max-h-540 overflow-y-auto scroll-sm">
                            <li class="mb-24">
                                <a href="@Url.Action("Index", "Catalog")" class="text-gray-900 hover-text-main-600 @(Model.SelectedCategoryId == null ? "text-main-600" : "")">All Categories</a>
                            </li>
                            @foreach (var category in Model.Categories)
                            {
                                <li class="mb-24">
                                    <a href="@Url.Action("Index", "Catalog", new { categoryId = category.Id })" 
                                       class="text-gray-900 hover-text-main-600 @(Model.SelectedCategoryId == category.Id ? "text-main-600" : "")">
                                        @category.Name
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="shop-sidebar__box border border-gray-100 rounded-8 p-32 mb-32">
                        <h6 class="text-xl border-bottom border-gray-100 pb-24 mb-24">Filter by Price</h6>
                        <div class="custom--range">
                            <div id="slider-range"></div>
                            <div class="flex-between flex-wrap-reverse gap-8 mt-24">
                                <button type="button" id="priceFilterBtn" class="btn btn-main h-40 flex-align">Filter</button>
                                <div class="custom--range__content flex-align gap-8">
                                    <span class="text-gray-500 text-md flex-shrink-0">Price:</span>
                                    <input type="text" class="custom--range__prices text-neutral-600 text-start text-md fw-medium" id="amount" readonly>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="shop-sidebar__box border border-gray-100 rounded-8 p-32 mb-32">
                        <h6 class="text-xl border-bottom border-gray-100 pb-24 mb-24">Filter by Rating</h6>
                        @for (int i = 5; i >= 1; i--)
                        {
                            <div class="flex-align gap-8 position-relative mb-20">
                                <label class="position-absolute w-100 h-100 cursor-pointer" for="rating@(i)"></label>
                                <div class="common-check common-radio mb-0">
                                    <input class="form-check-input rating-filter" type="radio" name="rating" id="rating@(i)" value="@i" @(Model.Rating == i ? "checked" : "")>
                                </div>
                                <div class="progress w-100 bg-gray-100 rounded-pill h-8" role="progressbar" aria-label="Rating @i" aria-valuenow="@(i * 20)" aria-valuemin="0" aria-valuemax="100">
                                    <div class="progress-bar bg-main-600 rounded-pill" style="width: @(i * 20)%"></div>
                                </div>
                                <div class="flex-align gap-4">
                                    @for (int j = 1; j <= 5; j++)
                                    {
                                        <span class="text-xs fw-medium @(j <= i ? "text-warning-600" : "text-gray-400") d-flex">
                                            <i class="ph-fill ph-star"></i>
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="shop-sidebar__box border border-gray-100 rounded-8 p-32 mb-32">
                        <h6 class="text-xl border-bottom border-gray-100 pb-24 mb-24">Filter by Brand</h6>
                        <ul class="max-h-540 overflow-y-auto scroll-sm">
                            @{
                                var brands = Model.Products.Select(p => p.StoreName).Distinct().ToList();
                            }
                            @foreach (var brand in brands)
                            {
                                <li class="mb-24">
                                    <div class="form-check common-check common-radio">
                                        <input class="form-check-input brand-filter" type="radio" name="brand" id="brand_@brand" value="@brand" @(Model.Brand == brand ? "checked" : "")>
                                        <label class="form-check-label" for="brand_@brand">@brand</label>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <!-- Sidebar End -->
            <!-- Content Start -->
            <div class="col-lg-9">
                <!-- Top Start --> 
                <div class="flex-between gap-16 flex-wrap mb-40">
                    <span class="text-gray-900">Showing @((Model.CurrentPage - 1) * 4 + 1)-@Math.Min(Model.CurrentPage * 4, Model.Products.Count) of @Model.Products.Count results</span>
                </div>
                <!-- Top End -->

                <div class="row g-24">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-xl-3 col-lg-4 col-sm-6" data-aos="fade-up" data-aos-duration="200">
                            <div class="product-card h-100 p-16 border border-gray-100 hover-border-main-600 rounded-16 position-relative transition-2">
                                <a href="@Url.Action("Details", "Products", new { id = product.Id })" class="product-card__thumb flex-center rounded-8 position-relative">
                                    @if (product.OrderCount > 50)
                                    {
                                        <span class="product-card__badge bg-danger-600 px-8 py-4 text-sm text-white position-absolute inset-inline-start-0 inset-block-start-0">Hot</span>
                                    }
                                    <img src="@(product.ImageUrls?.FirstOrDefault())" 
                                         alt="@product.Name"
                                         class="w-auto max-w-unset"
                                         style="width: 115px; height: 140px; object-fit: contain;">
                                    <div class="product-actions position-absolute top-0 end-0 mt-2 me-2">
                                        <button type="button" 
                                                class="btn btn-light btn-sm rounded-circle me-2 add-to-wishlist @(Model.WishlistItemIds.Contains(product.Id) ? "active" : "")" 
                                                data-product-id="@product.Id">
                                            <span class="icon-heart"></span>
                                        </button>
                                    </div>
                                </a>
                                <div class="product-card__content mt-16">
                                    <h6 class="title text-lg fw-semibold mt-12 mb-8">
                                        <a href="@Url.Action("Details", "Products", new { id = product.Id })" class="link text-line-2">@product.Name</a>
                                    </h6>
                                    <div class="flex-align gap-6">
                                        <span class="text-xs fw-medium text-gray-500">@product.Rating</span>
                                        <span class="text-xs fw-medium text-warning-600 d-flex"><i class="ph-fill ph-star"></i></span>
                                    </div>
                                    <div class="product-card__price my-20">
                                        <span class="text-heading text-md fw-semibold">$@product.Price.ToString("F2")</span>
                                    </div>
                                    <a href="@Url.Action("AddToCart", "Cart", new { id = product.Id })" 
                                       class="product-card__cart btn bg-gray-50 text-heading hover-bg-main-600 hover-text-white py-11 px-24 rounded-pill flex-center gap-8 fw-medium @(Model.CartItemIds.Contains(product.Id) ? "active bg-success text-white" : "")">
                                        Add To Cart <span class="icon-cart"></span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination Start -->
                @if (Model.TotalPages > 1)
                {
                    <ul class="pagination flex-center flex-wrap gap-16 mt-40">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link h-64 w-64 flex-center text-xxl rounded-8 fw-medium text-neutral-600 border border-gray-100" 
                                   href="@Url.Action("Index", "Catalog", new { categoryId = Model.SelectedCategoryId, page = Model.CurrentPage - 1, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, rating = Model.Rating, brand = Model.Brand })">
                                    <i class="ph-bold ph-arrow-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                <a class="page-link h-64 w-64 flex-center text-md rounded-8 fw-medium text-neutral-600 border border-gray-100" 
                                   href="@Url.Action("Index", "Catalog", new { categoryId = Model.SelectedCategoryId, page = i, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, rating = Model.Rating, brand = Model.Brand })">
                                    @i.ToString("D2")
                                </a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link h-64 w-64 flex-center text-xxl rounded-8 fw-medium text-neutral-600 border border-gray-100" 
                                   href="@Url.Action("Index", "Catalog", new { categoryId = Model.SelectedCategoryId, page = Model.CurrentPage + 1, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, rating = Model.Rating, brand = Model.Brand })">
                                    <i class="ph-bold ph-arrow-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                }
                <!-- Pagination End -->
            </div>
            <!-- Content End -->
        </div>
    </div>
</section>
<!-- =============================== Shop Section End ======================================== -->

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize price range slider
            $("#slider-range").slider({
                range: true,
                min: 0,
                max: 10000,
                values: [@(Model.MinPrice ?? 0), @(Model.MaxPrice ?? 10000)],
                slide: function(event, ui) {
                    $("#amount").val("$" + ui.values[0] + " - $" + ui.values[1]);
                }
            });
            $("#amount").val("$" + $("#slider-range").slider("values", 0) + " - $" + $("#slider-range").slider("values", 1));

            // Price filter button click handler
            $("#priceFilterBtn").click(function() {
                var values = $("#slider-range").slider("values");
                var url = new URL(window.location.href);
                url.searchParams.set("minPrice", values[0]);
                url.searchParams.set("maxPrice", values[1]);
                window.location.href = url.toString();
            });

            // Rating filter change handler
            $(".rating-filter").change(function() {
                var url = new URL(window.location.href);
                url.searchParams.set("rating", $(this).val());
                window.location.href = url.toString();
            });

            // Brand filter change handler
            $(".brand-filter").change(function() {
                var url = new URL(window.location.href);
                url.searchParams.set("brand", $(this).val());
                window.location.href = url.toString();
            });

            // Save filter state to localStorage
            function saveFilterState() {
                var filters = {
                    minPrice: $("#slider-range").slider("values", 0),
                    maxPrice: $("#slider-range").slider("values", 1),
                    rating: $("input[name='rating']:checked").val(),
                    brand: $("input[name='brand']:checked").val()
                };
                localStorage.setItem('catalogFilters', JSON.stringify(filters));
            }

            // Load filter state from localStorage
            function loadFilterState() {
                var filters = localStorage.getItem('catalogFilters');
                if (filters) {
                    filters = JSON.parse(filters);
                    
                    // Apply price range
                    $("#slider-range").slider("values", [filters.minPrice, filters.maxPrice]);
                    $("#amount").val("$" + filters.minPrice + " - $" + filters.maxPrice);

                    // Apply rating
                    if (filters.rating) {
                        $(`input[name='rating'][value='${filters.rating}']`).prop('checked', true);
                    }

                    // Apply brand
                    if (filters.brand) {
                        $(`input[name='brand'][value='${filters.brand}']`).prop('checked', true);
                    }
                }
            }

            // Save filter state before leaving page
            $(window).on('beforeunload', saveFilterState);

            // Load filter state on page load
            loadFilterState();
        });
    </script>
}
